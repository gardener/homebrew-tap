name: Remote Dispatch Action

permissions:
  contents: write
  pull-requests: write

# ──────────────────────────────── TRIGGERS ────────────────────────────────
on:
  # automatic calls from other repos
  repository_dispatch:

  # manual “Run workflow” button
  workflow_dispatch:
    inputs:
      component:
        description: 'Component (gardenlogin | gardenctl-v2 | diki …)'
        required: true
        type: string
      tag:
        description: 'Version / tag (e.g. v1.4.0)'
        required: true
        type: string
      darwin_sha_amd64:
        description: 'Optional sha256 for darwin-amd64, if not provided dummy sha will be used'
        required: false
        type: string
      darwin_sha_arm64:
        description: 'Optional sha256 for darwin-arm64, if not provided dummy sha will be used'
        required: false
        type: string
      linux_sha_amd64:
        description: 'Optional sha256 for linux-amd64, if not provided dummy sha will be used'
        required: false
        type: string
      linux_sha_arm64:
        description: 'Optional sha256 for linux-arm64, if not provided dummy sha will be used'
        required: false
        type: string

# ───────────────────────────────── JOBS ───────────────────────────────────
jobs:
  update-formula:
    runs-on: ubuntu-latest

    # Matrix collapses to ONE row: the component we got via event or input
    strategy:
      matrix:
        component:
          - ${{ github.event_name == 'repository_dispatch'
               && github.event.client_payload.component
               || inputs.component }}

    # -------- shared environment values (event-specific fall-backs) ---------
    env:
      TAG: >-
        ${{ github.event_name == 'repository_dispatch'
            && github.event.client_payload.tag
            || inputs.tag }}

      DARWIN_SHA_AMD64: >-
        ${{ github.event_name == 'repository_dispatch'
            && github.event.client_payload.darwin_sha_amd64
            || inputs.darwin_sha_amd64 }}

      DARWIN_SHA_ARM64: >-
        ${{ github.event_name == 'repository_dispatch'
            && github.event.client_payload.darwin_sha_arm64
            || inputs.darwin_sha_arm64 }}

      LINUX_SHA_AMD64: >-
        ${{ github.event_name == 'repository_dispatch'
            && github.event.client_payload.linux_sha_amd64
            || inputs.linux_sha_amd64 }}

      LINUX_SHA_ARM64: >-
        ${{ github.event_name == 'repository_dispatch'
            && github.event.client_payload.linux_sha_arm64
            || inputs.linux_sha_arm64 }}

    steps:
      # ─────────────── show what we received / entered ───────────────
      - name: Event summary
        run: |
          echo "Triggered by : ${{ github.event_name }}"
          echo "Component    : ${{ matrix.component }}"
          echo "Version tag  : $TAG"
          echo "darwin-amd64 : $DARWIN_SHA_AMD64"
          echo "darwin-arm64 : $DARWIN_SHA_ARM64"
          echo "linux-amd64  : $LINUX_SHA_AMD64"
          echo "linux-arm64  : $LINUX_SHA_ARM64"

      # ──────────────────── repo checkout (pinned) ───────────────────
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683   # v4.2.2

      # ─────────────────── generate/update formula ───────────────────
      - name: Run component-specific update script
        run: |
          script=".github/workflows/update-${{ matrix.component }}.sh"
          chmod +x "$script"
          "$script" \
            "$TAG" \
            "$DARWIN_SHA_AMD64" "$DARWIN_SHA_ARM64" \
            "$LINUX_SHA_AMD64"  "$LINUX_SHA_ARM64"

      # ───────────────────── create pull request ─────────────────────
      - name: Create pull request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          branch="update_${{ matrix.component }}_${TAG}"
          git switch -c "$branch"
          git add "${{ matrix.component }}.rb"
          git commit -m "update ${{ matrix.component }} to $TAG"
          git push -u origin "$branch"
          gh pr create \
            --head "$branch" \
            --base "${{ github.event.repository.default_branch }}"
            --title "update ${{ matrix.component }} to ${{ env.TAG }}" \
            --body  "Updates Chocolatey package for **${{ matrix.component }}** (${{ env.TAG }})."
